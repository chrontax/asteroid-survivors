            RenderLiteral::Game(ShapeLiteral::Polygon {
                // pos: [200., 200.],
                pos: self.player.physics_module.borrow().position,
                angles: vec![
                    rand::thread_rng().gen_range(0f32..2f32) * PI,
                    rand::thread_rng().gen_range(0f32..2f32) * PI,
                    rand::thread_rng().gen_range(0f32..2f32) * PI,
                    rand::thread_rng().gen_range(0f32..2f32) * PI,
                    rand::thread_rng().gen_range(0f32..2f32) * PI,
                    rand::thread_rng().gen_range(0f32..2f32) * PI,
                    rand::thread_rng().gen_range(0f32..2f32) * PI,
                    rand::thread_rng().gen_range(0f32..2f32) * PI,
                    rand::thread_rng().gen_range(0f32..2f32) * PI,
                    rand::thread_rng().gen_range(0f32..2f32) * PI,
                    rand::thread_rng().gen_range(0f32..2f32) * PI,
                    rand::thread_rng().gen_range(0f32..2f32) * PI,
                ],
                distances: vec![
                    rand::thread_rng().gen_range(0f32..30f32),
                    rand::thread_rng().gen_range(0f32..30f32),
                    rand::thread_rng().gen_range(0f32..30f32),
                    rand::thread_rng().gen_range(0f32..30f32),
                    rand::thread_rng().gen_range(0f32..30f32),
                    rand::thread_rng().gen_range(0f32..30f32),
                    rand::thread_rng().gen_range(0f32..30f32),
                    rand::thread_rng().gen_range(0f32..30f32),
                    rand::thread_rng().gen_range(0f32..30f32),
                    rand::thread_rng().gen_range(0f32..30f32),
                    rand::thread_rng().gen_range(0f32..30f32),
                    rand::thread_rng().gen_range(0f32..30f32),
                ],
                border_thickness: 0.,
                colour: Vec4::new(
                    rand::thread_rng().gen_range(0f32..1f32),
                    rand::thread_rng().gen_range(0f32..1f32),
                    rand::thread_rng().gen_range(0f32..1f32),
                    rand::thread_rng().gen_range(0f32..1f32),
                ),
            }),
